(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{304:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("h2",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operators 操作员")]),t._v(" "),s("th",[t._v("Precedence 优先级")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("postfix 后缀")]),t._v(" "),s("td",[s("code",[t._v("expr++ expr--")])])]),t._v(" "),s("tr",[s("td",[t._v("unary 一元的")]),t._v(" "),s("td",[s("code",[t._v("++expr --expr +expr -expr ~ !")])])]),t._v(" "),s("tr",[s("td",[t._v("multiplicative 〔数〕乘法的")]),t._v(" "),s("td",[s("code",[t._v("/ %")])])]),t._v(" "),s("tr",[s("td",[t._v("additive 添加剂")]),t._v(" "),s("td",[s("code",[t._v("+ -")])])]),t._v(" "),s("tr",[s("td",[t._v("shift 移动")]),t._v(" "),s("td",[s("code",[t._v("<< >> >>>")])])]),t._v(" "),s("tr",[s("td",[t._v("relational 关系的")]),t._v(" "),s("td",[s("code",[t._v("< > <= >= instanceof")])])]),t._v(" "),s("tr",[s("td",[t._v("equality 平等")]),t._v(" "),s("td",[s("code",[t._v("== !=")])])]),t._v(" "),s("tr",[s("td",[t._v("bitwise AND 按位 AND")]),t._v(" "),s("td",[s("code",[t._v("&")])])]),t._v(" "),s("tr",[s("td",[t._v("bitwise exclusive OR 按位异或")]),t._v(" "),s("td",[s("code",[t._v("^")])])]),t._v(" "),s("tr",[s("td",[t._v("bitwise inclusive OR 按位包含或")]),t._v(" "),s("td",[s("code",[t._v("\\|")])])]),t._v(" "),s("tr",[s("td",[t._v("logical AND 逻辑与")]),t._v(" "),s("td",[s("code",[t._v("&&")])])]),t._v(" "),s("tr",[s("td",[t._v("logical OR 逻辑或")]),t._v(" "),s("td",[s("code",[t._v("\\|\\|")])])]),t._v(" "),s("tr",[s("td",[t._v("ternary 三进制的")]),t._v(" "),s("td",[s("code",[t._v("? :")])])]),t._v(" "),s("tr",[s("td",[t._v("assignment 赋值")]),t._v(" "),s("td",[s("code",[t._v("= += -= *= /= %= &= ^= |= <<= >>= >>>=")])])])])]),t._v(" "),s("h2",{attrs:{id:"一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[t._v("#")]),t._v(" 一元运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operator")]),t._v(" "),s("th",[t._v("Description 描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("+")])]),t._v(" "),s("td",[t._v("Unary plus operator; indicates positive value (numbers are positive without this, however) 一元加运算符; 表示正值(数字为 但是，如果没有这个，就是正的)")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-")])]),t._v(" "),s("td",[t._v("Unary minus operator; negates an expression 一元减运算符; 对表达式求反")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("++")])]),t._v(" "),s("td",[t._v("Increment operator; increments a value by 1 增量运算符; 将值增加1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("--")])]),t._v(" "),s("td",[t._v("Decrement operator; decrements a value by 1 递减运算符; 将值递减1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("!")])]),t._v(" "),s("td",[t._v("Logical complement operator; inverts the value of a boolean 逻辑补码运算符; 反转布尔值")])])])]),t._v(" "),s("p",[t._v("++a 和 a++ 的区别是 对于复杂的表达式：++a会先递增，再运算；a++会先运算后递增")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不输出  ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出  ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://obs-knowledge.oss-cn-beijing.aliyuncs.com/img/20230613125752.png",alt:"image.png"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  public void test2();\n    Code:\n       0: iconst_2              //在栈帧的操作数栈，准备一个数字2\n       1: istore_1              //将这个数字2存储到1号槽位中\n       2: iload_1               //加载1号槽位的数到操作数栈，也就是数字2\n       3: iinc          1, 1    //在槽位上自增\n       6: iconst_2              //在栈帧的操作数栈，准备一个数字2，用来比较\n       7: if_icmple     10      //比较操作数栈中的两个数，一个是从在槽位自增之前加载的2，一个是刚准备好的2\n      10: return\n\n  public void test3();\n    Code:\n       0: iconst_2             //在栈帧的操作数栈，准备一个数字2\n       1: istore_1             //将这个数字2存储到1号槽位中\n       2: iinc          1, 1   //在槽位上自增，变成3\n       5: iload_1\n       6: iconst_2\n       7: if_icmple     10\n      10: return\n  \n  public void test4();\n    Code:\n       0: iconst_2\n       1: istore_1\n       2: iload_1\n       3: iconst_1\n       4: iadd\n       5: dup\n       6: istore_1\n       7: iconst_2\n       8: if_icmple     11\n      11: return\n\n\n")])])]),s("p",[t._v("i++不是线程安全的")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("静态变量i++\n\ngetstatic i // 获取静态变量i的值  \niconst_1 // 准备常量1  \niadd // 自增  \nputstatic i // 将修改后的值存入静态变量i  \n\n\n\n静态变量i--\n\ngetstatic i // 获取静态变量i的值  \niconst_1 // 准备常量1  \nisub // 自减  \nputstatic i // 将修改后的值存入静态变量i\n")])])]),s("p",[t._v("正常情况\n"),s("img",{attrs:{src:"https://obs-knowledge.oss-cn-beijing.aliyuncs.com/img/20230613133336.png",alt:"image.png"}})]),t._v(" "),s("p",[t._v("多线程，指令交错\n"),s("img",{attrs:{src:"https://obs-knowledge.oss-cn-beijing.aliyuncs.com/img/20230613133349.png",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[t._v("=")]),t._v(" "),s("h2",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operator")]),t._v(" "),s("th",[t._v("Description 描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("+")])]),t._v(" "),s("td",[t._v("Additive operator (also used for String concatenation) 加法运算符(也用于字符串连接)")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("-")])]),t._v(" "),s("td",[t._v("Subtraction operator 减法运算符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("*")])]),t._v(" "),s("td",[t._v("Multiplication operator 乘法运算符")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("/")])]),t._v(" "),s("td",[t._v("Division operator")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("%")])]),t._v(" "),s("td",[t._v("Remainder operator 余数运算符")])])])]),t._v(" "),s("h2",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("p",[t._v("==   >=")]),t._v(" "),s("h2",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("操作元是boolean型数据")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("操作符")])]),t._v(" "),s("th",[s("strong",[t._v("描述")])]),t._v(" "),s("th",[s("strong",[t._v("例子")])]),t._v(" "),s("th",[s("strong",[t._v("结合方向")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&，&")]),t._v(" "),s("td",[t._v("称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。")]),t._v(" "),s("td",[t._v("（A && B）为假。")]),t._v(" "),s("td",[t._v("从左到右")])]),t._v(" "),s("tr",[s("td",[t._v("| |")]),t._v(" "),s("td",[t._v("称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。")]),t._v(" "),s("td",[t._v("（A | | B）为真。")]),t._v(" "),s("td",[t._v("从左到右")])]),t._v(" "),s("tr",[s("td",[t._v("！")]),t._v(" "),s("td",[t._v("称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。")]),t._v(" "),s("td",[t._v("！（A && B）为真。")]),t._v(" "),s("td",[t._v("从右到左")])])])]),t._v(" "),s("ul",[s("li",[t._v("&&：”短路“运算符，如左边式子为假，则不判断右边，整体为假")]),t._v(" "),s("li",[t._v("&：”非短路“运算符，判断两边的式子")])]),t._v(" "),s("h2",{attrs:{id:"三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someCondition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" value1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true 返回value1")]),t._v("\n")])])]),s("h2",{attrs:{id:"类型比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型比较运算符"}},[t._v("#")]),t._v(" 类型比较运算符")]),t._v(" "),s("p",[t._v("instanceof")]),t._v(" "),s("p",[t._v("instanceof 运算符将对象与指定的类型进行比较。您可以使用它来测试对象是类的实例、子类的实例，还是实现特定接口的类的实例。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstanceofDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj1 instanceof Parent: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj1 instanceof Child: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj1 instanceof MyInterface: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj2 instanceof Parent: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj2 instanceof Child: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"obj2 instanceof MyInterface: "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInterface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInterface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n输出：\nobj1 instanceof Parent: true\nobj1 instanceof Child: false\nobj1 instanceof MyInterface: false\nobj2 instanceof Parent: true\nobj2 instanceof Child: true\nobj2 instanceof MyInterface: true\n*/")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("在使用 instanceof 运算符时，请记住 null 不是任何事物的实例。")])]),t._v(" "),s("h2",{attrs:{id:"位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),s("p",[t._v("针对二进制数\nA=60，0011 1100\nB=13，0000 1101")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1336599",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解 Java 位运算 - 云+社区 - 腾讯云 (tencent.com)"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("操作符")])]),t._v(" "),s("th",[s("strong",[t._v("描述")])]),t._v(" "),s("th",[s("strong",[t._v("例子")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("＆")]),t._v(" "),s("td",[t._v("如果相对应位都是1，则结果为1，否则为0")]),t._v(" "),s("td",[t._v("（A＆B），得到12，即0000 1100")])]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td",[t._v("如果相对应位都是 0，则结果为 0，否则为 1  (如果相对应位只要有一位是1，则结果为 1，否则为 0）")]),t._v(" "),s("td",[t._v("（A | B）得到61，即 0011 1101")])]),t._v(" "),s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("异或，如果相对应位值相同，则结果为0，否则为1")]),t._v(" "),s("td",[t._v("（A ^ B）得到49，即 0011 0001")])]),t._v(" "),s("tr",[s("td",[t._v("〜")]),t._v(" "),s("td",[t._v("按位取反运算符翻转操作数的每一位，即0变成1，1变成0。")]),t._v(" "),s("td",[t._v("（〜A）得到-61，即1100 0011")])]),t._v(" "),s("tr",[s("td",[t._v("<<")]),t._v(" "),s("td",[t._v("按位左移运算符。左操作数按位左移右操作数指定的位数。")]),t._v(" "),s("td",[t._v("A << 2得到240，即 1111 0000")])]),t._v(" "),s("tr",[s("td",[t._v(">>")]),t._v(" "),s("td",[t._v("按位右移运算符。左操作数按位右移右操作数指定的位数。  移动得到的空位以符号位填充。")]),t._v(" "),s("td",[t._v("A >> 2得到15即 1111")])]),t._v(" "),s("tr",[s("td",[t._v(">>>")]),t._v(" "),s("td",[t._v("按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。")]),t._v(" "),s("td",[t._v("A>>>2得到15即0000 1111")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java 右移"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有符号右移  ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无符号右移  ")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        java 右移  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        11111111111111111111111111111011  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        11111111111111111111111111111110  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        111111111111111111111111111110      注：前边的两个0被省略了  ")]),t._v("\n  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/leo0705/p/8473071.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 中>>和>>>的区别 - LEO07051004 - 博客园 (cnblogs.com)"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);